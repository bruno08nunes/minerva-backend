{
    "openapi": "3.1.0",
    "info": {
        "title": "Minerva API",
        "version": "1.0.0",
        "description": "API documentation for Minerva, a web application for learning programming."
    },
    "servers": [
        {
            "url": "http://localhost:3333",
            "description": "Local server"
        }
    ],
    "tags": [
        {
            "name": "Users",
            "description": "Operations related to users"
        },
        {
            "name": "Profile Pictures",
            "description": "Operations related to profile pictures"
        },
        {
            "name": "Icons",
            "description": "Operations related to icons"
        },
        {
            "name": "Themes",
            "description": "Operations related to themes"
        },
        {
            "name": "Topics",
            "description": "Operations related to topics"
        },
        {
            "name": "Lessons",
            "description": "Operations related to lessons"
        },
        {
            "name": "Exercises",
            "description": "Operations related to exercises"
        },
        {
            "name": "Choices",
            "description": "Operations related to choices"
        },
        {
            "name": "Explanations",
            "description": "Operations related to explanations"
        },
        {
            "name": "Progress",
            "description": "Operations related to progress"
        },
        {
            "name": "Achievements",
            "description": "Operations related to achievements"
        }
    ],
    "paths": {
        "/users/{username}": {
            "get": {
                "tags": ["Users"],
                "summary": "Get user by username",
                "description": "Retrieve a user by their unique username.",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "description": "The username of the user to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "put": {
                "tags": ["Users"],
                "summary": "Update user profile by ID",
                "description": "Update user details.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the user to update.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "profilePictureId": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "username": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Users"],
                "summary": "Delete user by ID",
                "description": "Delete a user account.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the user to delete.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": ["Users"],
                "summary": "Register a new user",
                "description": "Create a new user account.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email"
                                                }
                                            }
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User already exists."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": ["Users"],
                "summary": "User login",
                "description": "Authenticate a user and return a token.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": ["Users"],
                "summary": "User refresh token",
                "description": "Refresh the authentication token.",
                "parameters": [
                    {
                        "name": "refreshToken",
                        "in": "cookie",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Refresh token passed via cookie"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Refresh successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Refresh token missing/invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Refresh token missing."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/followers/{id}": {
            "get": {
                "tags": ["Users"],
                "summary": "Get followers by user ID",
                "description": "Retrieve a list of followers for a specific user.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the user to retrieve followers for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of followers.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Followers retrieved successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/following/{id}": {
            "get": {
                "tags": ["Users"],
                "summary": "Get following by user ID",
                "description": "Retrieve a list of users that a specific user is following.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the user to retrieve following for.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of following users.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Following users retrieved successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/follow": {
            "post": {
                "tags": ["Users"],
                "summary": "Follow a user",
                "description": "Follow a user by their ID.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "followerId": {
                                        "type": "string",
                                        "example": "123"
                                    },
                                    "followingId": {
                                        "type": "string",
                                        "example": "456"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User followed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/NotFoundError"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/ValidationError"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Users"],
                "summary": "Unfollow a user",
                "description": "Unfollow a user by their ID.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "followerId": {
                                        "type": "string",
                                        "example": "123"
                                    },
                                    "followingId": {
                                        "type": "string",
                                        "example": "456"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User unfollowed successfully.",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/NotFoundError"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/ValidationError"
                            }
                        }
                    }
                }
            }
        },
        "/profile-pictures": {
            "get": {
                "tags": ["Profile Pictures"],
                "summary": "Get all profile pictures",
                "description": "Retrieve a list of all profile pictures.",
                "responses": {
                    "200": {
                        "description": "List of profile pictures.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile pictures listed successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ProfilePicture"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Profile Pictures"],
                "summary": "Upload a new profile picture",
                "description": "Upload a new profile picture.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Profile picture uploaded successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile picture uploaded successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ProfilePicture"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid file format or file not send.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid file format."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/profile-pictures/{profilePictureId}": {
            "get": {
                "tags": ["Profile Pictures"],
                "summary": "Get profile picture by ID",
                "description": "Retrieve a profile picture by its unique ID.",
                "parameters": [
                    {
                        "name": "profilePictureId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the profile picture to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile picture details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile picture found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ProfilePicture"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Profile picture not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Profile Pictures"],
                "summary": "Delete profile picture by ID",
                "description": "Delete a profile picture.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "profilePictureId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the profile picture to delete.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile picture deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile picture deleted successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ProfilePicture"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Profile picture not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/icons": {
            "get": {
                "tags": ["Icons"],
                "summary": "Get all icons",
                "description": "Retrieve a list of all icons.",
                "responses": {
                    "200": {
                        "description": "List of icons.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Icons listed successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Icon"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Icons"],
                "summary": "Upload a new icon",
                "description": "Upload a new icon.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Icon uploaded successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Icon"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid file format or file not send.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/icons/{iconId}": {
            "get": {
                "tags": ["Icons"],
                "summary": "Get icon by ID",
                "description": "Retrieve an icon by its unique ID.",
                "parameters": [
                    {
                        "name": "iconId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the icon to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Icon details",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/Icon"
                            }
                        }
                    },
                    "404": {
                        "description": "Icon not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Icons"],
                "summary": "Delete icon by ID",
                "description": "Delete an icon.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "iconId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the icon to delete.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Icon deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Icon"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Icon not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/themes": {
            "get": {
                "tags": ["Themes"],
                "summary": "Get all themes",
                "description": "Retrieve a list of all themes.",
                "responses": {
                    "200": {
                        "description": "List of themes.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Themes listed successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Theme"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Themes"],
                "summary": "Create a theme",
                "description": "Create a new theme.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Lorem"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Lorem ipsum dolor"
                                    },
                                    "iconId": {
                                        "type": "string",
                                        "example": "123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Theme created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/themes/{id}": {
            "put": {
                "tags": ["Themes"],
                "summary": "Update theme by ID",
                "description": "Update theme details.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the theme to update.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Theme updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Topic updated successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Theme"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Theme not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Theme not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Themes"],
                "summary": "Delete theme by ID",
                "description": "Delete an theme.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the theme to delete.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Theme deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Theme"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Theme not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/topics": {
            "get": {
                "tags": ["Topics"],
                "summary": "Get all topics",
                "description": "Retrieve a list of all topics.",
                "responses": {
                    "200": {
                        "description": "List of topics.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Topics listed successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Topic"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Topics"],
                "summary": "Create a topic",
                "description": "Create a new topic.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Lorem"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Lorem ipsum dolor"
                                    },
                                    "iconId": {
                                        "type": "string",
                                        "example": "123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Topic created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Topic"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/topics/{id}": {
            "put": {
                "tags": ["Topics"],
                "summary": "Update topic by ID",
                "description": "Update topic details.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the topic to update.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Topic updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Topic updated successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Topic"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Topic not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Topic not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Topics"],
                "summary": "Delete topic by ID",
                "description": "Delete an topic.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the topic to delete.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Topic deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Topic"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Topic not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lessons": {
            "get": {
                "tags": ["Lessons"],
                "summary": "Get all lessons",
                "description": "Retrieve a list of all lessons.",
                "responses": {
                    "200": {
                        "description": "List of lessons.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lessons listed successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Lesson"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Lessons"],
                "summary": "Create a lesson",
                "description": "Create a new lesson.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Lesson"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Lorem ipsum dolor"
                                    },
                                    "rewardXP": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "topicId": {
                                        "type": "string",
                                        "example": "123"
                                    },
                                    "themeId": {
                                        "type": "string",
                                        "example": "123"
                                    },
                                    "iconId": {
                                        "type": "string",
                                        "example": "123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Lesson created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lesson"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lessons/list": {
            "get": {
                "tags": ["Lessons"],
                "summary": "Get lessons by topic and theme",
                "description": "Retrieve a list of lessons filtered by topic and theme.",
                "parameters": [
                    {
                        "name": "themeId",
                        "in": "query",
                        "description": "ID of the theme to filter lessons.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "theme_123"
                        }
                    },
                    {
                        "name": "topicId",
                        "in": "query",
                        "description": "ID of the topic to filter lessons.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "topic_456"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of lessons.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lessons listed successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Lesson"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lessons/{id}": {
            "get": {
                "tags": ["Lessons"],
                "summary": "Get lesson by ID",
                "description": "Retrieve an lesson by its unique ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the lesson to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lesson details",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/Lesson"
                            }
                        }
                    },
                    "404": {
                        "description": "Lesson not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Lessons"],
                "summary": "Update lesson by ID",
                "description": "Update lesson details.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the lesson to update.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "rewardXP": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "order": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lesson updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson updated successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Lesson"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Lesson not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lesson not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Lessons"],
                "summary": "Delete lesson by ID",
                "description": "Delete an lesson.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the lesson to delete.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lesson deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lesson"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Lesson not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exercises": {
            "post": {
                "tags": ["Exercises"],
                "summary": "Create a exercise",
                "description": "Create a new exercise.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "statement": { "type": "string" },
                                    "order": { "type": "integer" },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "MULTIPLE_CHOICE",
                                            "WRITE_CODE",
                                            "COMPLETE_CODE"
                                        ]
                                    },
                                    "hint": { "type": "string" },
                                    "lessonId": { "type": "string" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Exercise created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Exercise"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exercises/{id}": {
            "get": {
                "tags": ["Exercises"],
                "summary": "Get exercise by ID",
                "description": "Retrieve an exercise by its unique ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the exercise to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exercise details",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/Exercise"
                            }
                        }
                    },
                    "404": {
                        "description": "Exercise not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Exercises"],
                "summary": "Update exercise by ID",
                "description": "Update exercise details.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the exercise to update.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "statement": { "type": "string" },
                                    "order": { "type": "integer" },
                                    "hint": { "type": "string" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Exercise updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exercise updated successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Exercise"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exercise not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exercise not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Exercises"],
                "summary": "Delete exercise by ID",
                "description": "Delete an exercise.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the exercise to delete.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exercise deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Exercise"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exercise not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exercises/list/{lessonId}": {
            "get": {
                "tags": ["Exercises"],
                "summary": "Get exercises by lesson",
                "description": "Retrieve a list of exercises filtered by lesson.",
                "parameters": [
                    {
                        "name": "lessonId",
                        "in": "path",
                        "description": "ID of the lesson to filter exercises.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lesson_123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of exercises.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exercises listed successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Exercise"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/choices": {
            "post": {
                "tags": ["Choices"],
                "summary": "Create a choice",
                "description": "Create a new choice.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "text": { "type": "string" },
                                    "order": { "type": "integer" },
                                    "isCorrect": { "type": "boolean" },
                                    "exerciseId": { "type": "string" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Choice created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Choice"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/choices/{id}": {
            "get": {
                "tags": ["Choices"],
                "summary": "Get choice by ID",
                "description": "Retrieve an choice by its unique ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the choice to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Choice details",
                        "content": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "example": "Choice updated successfully."
                                    },
                                    "success": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "data": {
                                        "$ref": "#/components/schemas/Choice"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Choice not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Choices"],
                "summary": "Update choice by ID",
                "description": "Update choice details.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the choice to update.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "text": { "type": "string" },
                                    "order": { "type": "integer" },
                                    "isCorrect": { "type": "boolean" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Choice updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Choice updated successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Choice"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Choice not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Choice not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Choices"],
                "summary": "Delete choice by ID",
                "description": "Delete a choice.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the choice to delete.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Choice deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Choice"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Choice not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/choices/list/{exerciseId}": {
            "get": {
                "tags": ["Choices"],
                "summary": "Get choices by exercise",
                "description": "Retrieve a list of choices filtered by exercise.",
                "parameters": [
                    {
                        "name": "exerciseId",
                        "in": "path",
                        "description": "ID of the exercise to filter choices.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "exercise_123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of choices.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Choices listed successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Choice"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/explanations": {
            "post": {
                "tags": ["Explanations"],
                "summary": "Create a explanation",
                "description": "Create a new explanation.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "paragraph",
                                                        "code",
                                                        "image"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "topicId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Explanation created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Explanation created successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Explanation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/explanations/{id}": {
            "get": {
                "tags": ["Explanations"],
                "summary": "Get explanation by ID",
                "description": "Retrieve an explanation by its unique ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the explanation to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Explanation details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Explanation found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Explanation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Explanation not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Explanations"],
                "summary": "Update explanation by ID",
                "description": "Update explanation details.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the explanation to update.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "paragraph",
                                                        "code",
                                                        "image"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "topicId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Explanation updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Explanation updated successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Explanation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Explanation not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Explanations"],
                "summary": "Delete explanation by ID",
                "description": "Delete an explanation.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the explanation to delete.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Explanation deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Explanation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Explanation not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/explanations/list": {
            "get": {
                "tags": ["Explanations"],
                "summary": "List all explanations",
                "description": "Retrieve a list of explanations.",
                "responses": {
                    "200": {
                        "description": "List of explanations.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Explanations listed successfully."
                                        },
                                        "success": true,
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Explanation"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/explanations/list/{topicId}": {
            "get": {
                "tags": ["Explanations"],
                "summary": "Get explanations by topic",
                "description": "Retrieve a list of explanations filtered by topic.",
                "parameters": [
                    {
                        "name": "topicId",
                        "in": "path",
                        "description": "ID of the topic to filter explanations.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "topic_123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of explanations.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Explanations listed successfully."
                                        },
                                        "success": true,
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Explanation"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/progress": {
            "get": {
                "tags": ["Progress"],
                "summary": "Get progress by user and lesson",
                "description": "Retrieve a progress filtered by user and lesson.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "ID of the user to filter progress.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "user_123"
                        }
                    },
                    {
                        "name": "lessonId",
                        "in": "query",
                        "description": "ID of the lesson to filter progress.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "lesson_123"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Progress retrieved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Progress found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Progress"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Progress"],
                "summary": "Create or update a progress",
                "description": "Create or update a progress.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Progress"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Progress created/updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Progress updated successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Progress"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/achievements": {
            "get": {
                "tags": ["Achievements"],
                "summary": "Get achievements",
                "description": "Retrieve a list of achievements.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of achievements.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Achievements listed successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Achievement"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Achievements"],
                "summary": "Create an achievement",
                "description": "Create a new achievement.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Achievement"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Achievement created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Achievement created successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Achievement"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid.",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/ValidationError"
                            }
                        }
                    }
                }
            }
        },
        "/achievements/{id}": {
            "get": {
                "tags": ["Achievements"],
                "summary": "Get achievement by ID",
                "description": "Retrieve an achievement by its unique ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the achievement to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Achievement retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Achievement retrieved successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Achievement"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Achievement not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["Achievements"],
                "summary": "Update achievement by ID",
                "description": "Update an achievement by its unique ID.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the achievement to update.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Achievement"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Achievement updated successfully.",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/Achievement"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid.",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/ValidationError"
                            }
                        }
                    },
                    "404": {
                        "description": "Achievement not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Achievements"],
                "summary": "Delete achievement by ID",
                "description": "Delete an achievement by its unique ID.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the achievement to delete.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Achievement deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Achievement deleted successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Achievement"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Achievement not found.",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/ValidationError"
                            }
                        }
                    }
                }
            }
        },
        "/user/achievements": {
            "post": {
                "tags": ["Achievements", "Users"],
                "summary": "Create an user achievement",
                "description": "Create a new user achievement.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": { "type": "string" },
                                    "achievementId": { "type": "string" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User achievement created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User achievement created successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Achievement"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid.",
                        "content": {
                            "application/json": {
                                "$ref": "#/components/schemas/ValidationError"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Achievements", "Users"],
                "summary": "Delete an user achievement",
                "description": "Delete a user achievement.",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": { "type": "string" },
                                    "achievementId": { "type": "string" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Achievement deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Achievement deleted successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Achievement"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/achievements/{userId}": {
            "get": {
                "tags": ["Achievements", "Users"],
                "summary": "Get user achievements",
                "description": "Retrieve a list of user achievements.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the user.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user achievements.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User achievements listed successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Achievement"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "username": {
                        "type": "string"
                    },
                    "totalXP": {
                        "type": "integer"
                    },
                    "streak": {
                        "type": "integer"
                    },
                    "lastActiveDay": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "semanalXP": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string",
                        "enum": ["USER", "ADMIN"]
                    },
                    "profilePictureId": {
                        "type": "string",
                        "nullable": true
                    },
                    "profilePicture": {
                        "$ref": "#/components/schemas/ProfilePicture"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "email",
                    "username",
                    "totalXP",
                    "streak",
                    "lastActiveDay",
                    "semanalXP",
                    "createdAt",
                    "updatedAt",
                    "role"
                ]
            },
            "ValidationError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "issues": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "email": {
                                    "type": "object",
                                    "properties": {
                                        "_errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "password": {
                                    "type": "object",
                                    "properties": {
                                        "_errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "required": ["issues", "message", "success"],
                "example": {
                    "message": "Validation error.",
                    "success": false,
                    "issues": [
                        {
                            "_errors": ["Invalid email format."],
                            "email": {
                                "_errors": ["Email is required."]
                            },
                            "password": {
                                "_errors": [
                                    "Password must be at least 6 characters long."
                                ]
                            }
                        }
                    ]
                }
            },
            "CreateUser": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    },
                    "username": {
                        "type": "string",
                        "minLength": 3
                    }
                },
                "required": ["name", "email", "password"],
                "example": {
                    "name": "Bruno Nunes",
                    "email": "bruno@email.com",
                    "password": "admin123",
                    "username": "brunonunes"
                }
            },
            "LoginUser": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    }
                },
                "required": ["email", "password"],
                "example": {
                    "email": "bruno@email.com",
                    "password": "admin123"
                }
            },
            "ProfilePicture": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": ["id", "url"],
                "example": {
                    "id": "12345",
                    "url": "http://example.com/profile.jpg"
                }
            },
            "Icon": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "required": ["id", "url"],
                "example": {
                    "id": "icon123",
                    "url": "http://example.com/icon.png"
                }
            },
            "Theme": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "icon": {
                        "$ref": "#/components/schemas/Icon"
                    }
                },
                "required": ["id", "name", "description", "icon"],
                "example": {
                    "id": "123456",
                    "name": "Lorem",
                    "description": "Lorem ipsum met dolor.",
                    "icon": {
                        "id": "icon123",
                        "url": "http://example.com/icon.png"
                    }
                }
            },
            "Topic": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "icon": {
                        "$ref": "#/components/schemas/Icon"
                    }
                },
                "required": ["id", "name", "description", "icon"],
                "example": {
                    "id": "123456",
                    "name": "Lorem",
                    "description": "Lorem ipsum met dolor.",
                    "icon": {
                        "id": "icon123",
                        "url": "http://example.com/icon.png"
                    }
                }
            },
            "Lesson": {
                "type": "object",
                "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "description": { "type": "string" },
                    "rewardXP": { "type": "integer" },
                    "order": { "type": "integer" },
                    "topicId": { "type": "string" },
                    "themeId": { "type": "string" },
                    "iconId": { "type": "string" },
                    "exercises": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Exercise"
                        }
                    },
                    "topic": {
                        "$ref": "#/components/schemas/Topic"
                    },
                    "theme": {
                        "$ref": "#/components/schemas/Theme"
                    },
                    "icon": {
                        "$ref": "#/components/schemas/Icon"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "description",
                    "rewardXP",
                    "order",
                    "topicId",
                    "themeId",
                    "iconId",
                    "exercises",
                    "topic",
                    "theme",
                    "icon"
                ],
                "example": {
                    "id": "123",
                    "name": "Lição",
                    "description": "Lição",
                    "rewardXP": 0,
                    "order": 0,
                    "topicId": "topic123",
                    "themeId": "theme123",
                    "iconId": "icon123",
                    "exercises": [],
                    "topic": {
                        "id": "topic123",
                        "name": "Topico",
                        "description": "Topico",
                        "iconId": "icon123"
                    },
                    "theme": {
                        "id": "theme123",
                        "name": "Lorem",
                        "description": "Lorem ipsum dolor",
                        "iconId": "icon123"
                    },
                    "icon": {
                        "id": "icon123",
                        "url": "image.png"
                    }
                }
            },
            "Exercise": {
                "type": "object",
                "properties": {
                    "id": { "type": "string" },
                    "statement": { "type": "string" },
                    "order": { "type": "integer" },
                    "type": {
                        "type": "string",
                        "enum": [
                            "MULTIPLE_CHOICE",
                            "WRITE_CODE",
                            "COMPLETE_CODE"
                        ]
                    },
                    "hint": { "type": "string" },
                    "lessonId": { "type": "string" },
                    "choices": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Choice" }
                    }
                },
                "required": [
                    "id",
                    "statement",
                    "order",
                    "type",
                    "hint",
                    "lessonId"
                ],
                "example": {
                    "id": "123",
                    "statement": "Exercise statement",
                    "order": 0,
                    "type": "COMPLETE_CODE",
                    "hint": "Exercise hint",
                    "lessonId": "lesson123",
                    "choices": []
                }
            },
            "Choice": {
                "type": "object",
                "properties": {
                    "id": { "type": "string" },
                    "text": { "type": "string" },
                    "order": { "type": "number" },
                    "isCorrect": { "type": "boolean" },
                    "exerciseId": { "type": "string" }
                },
                "required": ["id", "text", "order", "isCorrect", "exerciseId"],
                "example": {
                    "id": "123",
                    "text": "Lorem",
                    "order": 0,
                    "isCorrect": true,
                    "exerciseId": "exercise123"
                }
            },
            "Explanation": {
                "type": "object",
                "properties": {
                    "id": { "type": "string" },
                    "title": { "type": "string" },
                    "content": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": ["paragraph", "code", "image"]
                                },
                                "data": { "type": "string" }
                            }
                        }
                    },
                    "exerciseId": { "type": "string" }
                },
                "required": ["id", "title", "content", "exerciseId"],
                "example": {
                    "id": "123",
                    "title": "Explanation title",
                    "content": [
                        {
                            "type": "paragraph",
                            "data": "Lorem ipsum dolor sit amet."
                        },
                        {
                            "type": "code",
                            "data": "console.log(\"Hello World\");"
                        },
                        {
                            "type": "image",
                            "data": "http://example.com/image.png"
                        }
                    ],
                    "topicId": "topic123"
                }
            },
            "Progress": {
                "type": "object",
                "properties": {
                    "userId": { "type": "string" },
                    "lessonId": { "type": "string" },
                    "isCompleted": { "type": "boolean" },
                    "lastTry": { "type": "string", "format": "date-time" }
                }
            },
            "Achievement": {
                "type": "object",
                "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "description": { "type": "string" },
                    "iconId": { "type": "string" },
                    "icon": {
                        "$ref": "#/components/schemas/Icon"
                    }
                },
                "required": ["id", "name", "description", "iconId", "icon"],
                "example": {
                    "id": "achievement123",
                    "name": "First Lesson Completed",
                    "description": "Awarded for completing the first lesson.",
                    "iconId": "icon123",
                    "icon": {
                        "id": "icon123",
                        "url": "http://example.com/icon.png"
                    }
                }
            }
        }
    }
}
