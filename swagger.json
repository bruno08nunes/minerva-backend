{
    "openapi": "3.1.0",
    "info": {
        "title": "Minerva API",
        "version": "1.0.0",
        "description": "API documentation for Minerva, a web application for learning programming."
    },
    "servers": [
        {
            "url": "http://localhost:3333",
            "description": "Local server"
        }
    ],
    "paths": {
        "/users/{userId}": {
            "get": {
                "tags": ["Users"],
                "summary": "Get user by ID",
                "description": "Retrieve a user by their unique ID.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the user to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": ["Users"],
                "summary": "Register a new user",
                "description": "Create a new user account.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email"
                                                }
                                            }
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User already exists."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": ["Users"],
                "summary": "User login",
                "description": "Authenticate a user and return a token.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": ["Users"],
                "summary": "User refresh token",
                "description": "Refresh the authentication token.",
                "parameters": [
                    {
                        "name": "refreshToken",
                        "in": "cookie",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Refresh token passed via cookie"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Refresh successful.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Refresh token missing/invalid.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Refresh token missing."
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "totalXP": {
                        "type": "integer"
                    },
                    "streak": {
                        "type": "integer"
                    },
                    "lastActiveDay": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "semanalXP": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string",
                        "enum": ["USER", "ADMIN"]
                    },
                    "profilePictureId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "name",
                    "email",
                    "totalXP",
                    "streak",
                    "lastActiveDay",
                    "semanalXP",
                    "createdAt",
                    "updatedAt",
                    "role"
                ]
            },
            "ValidationError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "issues": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "_errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "email": {
                                    "type": "object",
                                    "properties": {
                                        "_errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "password": {
                                    "type": "object",
                                    "properties": {
                                        "_errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "required": ["issues", "message", "success"],
                "example": {
                    "message": "Validation error.",
                    "success": false,
                    "issues": [
                        {
                            "_errors": ["Invalid email format."],
                            "email": {
                                "_errors": ["Email is required."]
                            },
                            "password": {
                                "_errors": [
                                    "Password must be at least 6 characters long."
                                ]
                            }
                        }
                    ]
                }
            },
            "CreateUser": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    }
                },
                "required": ["name", "email", "password"],
                "example": {
                    "name": "Bruno Nunes",
                    "email": "bruno@email.com",
                    "password": "admin123"
                }
            },
            "LoginUser": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    }
                },
                "required": ["email", "password"],
                "example": {
                    "email": "bruno@email.com",
                    "password": "admin123"
                }
            }
        }
    }
}
